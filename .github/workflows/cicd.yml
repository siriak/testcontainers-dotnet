name: Continuous Integration & Delivery

on:
  push:
    branches: [ develop, master, bugfix/*, feature/* ]
  pull_request:
    branches: [ develop, master ]
  workflow_dispatch:
    inputs:
      publish_nuget_package:
        description: Publish a new NuGet package?
        required: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.sha }}
  cancel-in-progress: true

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  TZ: CET # https://stackoverflow.com/q/53510011

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-22.04, windows-2022 ]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Pull Ryuk
        run: docker pull mdelapenya/ryuk:temp3

      - name: Run Ryuk on Linux
        if: ${{ matrix.os == 'ubuntu-22.04' }}
        run: docker run -v /var/run/docker.sock:/var/run/docker.sock mdelapenya/ryuk:temp3

      - name: Run Ryuk on Windows
        if: ${{ matrix.os == 'windows-2022' }}
        run: docker run -v //./pipe/docker_engine://./pipe/docker_engine mdelapenya/ryuk:temp3
        continue-on-error: true

      - name: Run Ryuk on Windows (override daemon.json)
        if: ${{ matrix.os == 'windows-2022' }}
        run: | # https://learn.microsoft.com/de-de/virtualization/windowscontainers/manage-docker/configure-docker-daemon#set-docker-security-group
          $daemonSettings = New-Object PSObject
          $daemonSettings | Add-Member NoteProperty hosts @("npipe://")
          $daemonSettings | Add-Member NoteProperty group "Users"
          $daemonSettings | ConvertTo-Json | Out-File -FilePath "$($env:ProgramData)\docker\config\daemon.json" -Encoding ASCII
          Get-Service -Name *docker* | Restart-Service
          Start-Sleep -Seconds 30
          docker run -v //./pipe/docker_engine://./pipe/docker_engine mdelapenya/ryuk:temp3
        continue-on-error: true

      - name: Cache NuGet Packages
        uses: actions/cache@v3
        with:
          key: ${{ matrix.os }}-nuget-${{ hashFiles('Directory.Build.props') }}
          path: ~/.nuget/packages

      - name: Setup .NET
        uses: actions/setup-dotnet@v3

      - name: Restore .NET Tools
        run: dotnet tool restore

      - name: Restore NuGet Packages
        run: dotnet cake --target=Restore-NuGet-Packages

      - name: Run Build
        run: dotnet cake --target=Build

      - name: Run Tests
        run: dotnet cake --target=Tests --test-filter=FullyQualifiedName~${{ startsWith(matrix.os, 'ubuntu') && 'DotNet.Testcontainers' || 'DotNet.Testcontainers.Tests.Unit.Containers.Windows' }}

      - name: Rename Test And Coverage Results
        run: Get-ChildItem -Path 'test-coverage' -Filter *.xml | Rename-Item -NewName { $_.Name -Replace 'coverage', '${{ matrix.os }}'.ToLower() }
        shell: pwsh

      - name: Upload Test And Coverage Results
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}
          path: |
            test-coverage
            test-results

  publish:
    if: ${{ contains(fromJson('["develop", "master"]'), github.ref_name) }}

    needs: build

    environment: production

    runs-on: ubuntu-22.04

    permissions:
      contents: write
      pull-requests: read

    env:
      FEED_SOURCE: https://api.nuget.org/v3/index.json
      FEED_APIKEY: ${{ secrets.FEED_APIKEY }}
      SONARCLOUD_URL: https://sonarcloud.io
      SONARCLOUD_ORGANIZATION: testcontainers
      SONARCLOUD_KEY: testcontainers_testcontainers-dotnet
      SONARCLOUD_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          lfs: true
          fetch-depth: 0

      - name: Download Test And Coverage Results (ubuntu-22.04)
        uses: actions/download-artifact@v3
        with:
          name: ubuntu-22.04

      - name: Download Test And Coverage Results (windows-2022)
        uses: actions/download-artifact@v3
        with:
          name: windows-2022

      - name: Fix Absolute Code Coverage Paths
        run: |
          Get-ChildItem -Path 'test-coverage' -Filter *.xml | % { (Get-Content $_) -Replace '[A-Za-z0-9:\-\/\\]+src', '${{ github.workspace }}/src' | Set-Content $_ }
          Get-ChildItem -Path 'test-coverage' -Filter *.xml | % { (Get-Content $_) -Replace '[A-Za-z0-9:\-\/\\]+tests', '${{ github.workspace }}/tests' | Set-Content $_ }
        shell: pwsh

      - name: Cache NuGet Packages
        uses: actions/cache@v3
        with:
          key: ubuntu-22.04-nuget-${{ hashFiles('Directory.Build.props') }}
          path: ~/.nuget/packages

      - name: Setup .NET
        uses: actions/setup-dotnet@v3

      - name: Restore .NET Tools
        run: dotnet tool restore

      - name: Restore NuGet Packages
        run: dotnet cake --target=Restore-NuGet-Packages

      - name: Run Sonar Analysis
        run: dotnet cake --target=Sonar-Begin

      - name: Run Build
        run: dotnet cake --target=Build

      - name: Upload Sonar Results
        run: dotnet cake --target=Sonar-End

      - name: Publish NuGet Package
        run: dotnet cake --target=Publish
        env:
          PUBLISH_NUGET_PACKAGE: ${{ inputs.publish_nuget_package }}

      - uses: release-drafter/release-drafter@6df64e4ba4842c203c604c1f45246c5863410adb
        with:
          version: ${{ env.semVer }} # Cake sets the semVer environment variable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
